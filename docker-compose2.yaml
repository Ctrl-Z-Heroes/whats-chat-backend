version: '3.8'
services:
  #Jaegar
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '4317:4317'
      - '4318:4318'
      - '14250:14250'
      - '14268:14268'
      - '14269:14269'
      - '9411:9411'
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    networks:
      - db_net
    # Prometheus
    # prometheus:
    #   image: quay.io/prometheus/prometheus:v2.34.0
    #   command: --config.file=/etc/prometheus/prometheus.yml --no-scrape.adjust-timestamps
    #   volumes:
    #     - ./docker/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    #   ports:
    #     - '9090:9090'
    #   networks:
    #     - db_net

    # Grafana
    # grafana:
    #   image: grafana/grafana:9.0.1
    #   container_name: grafana
    #   volumes:
    #     - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini
    #     - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    #   ports:
    #     - '3000:3000'
    #   networks:
    #     - db_net

    # storage:
    #   image: openzipkin/zipkin-mysql
    #   container_name: mysql
    #   environment:
    #     MYSQL_ROOT_PASSWORD: your_mysql_root_password
    #     MYSQL_DATABASE: zipkin
    #     MYSQL_USER: zipkin
    #     MYSQL_PASSWORD: your_zipkin_mysql_password
    #     TZ: 'UTC' # Set the timezone to UTC
    #   ports:
    #     - 3306:3306
    #   networks:
    #     - db_net

    # Artillery
    # artillery:
    #   image: artilleryio/artillery:latest
    #   volumes:
    #     - ./docker/artillery:/scripts
    #   command: ['run', '/scripts/test.yml']
    #   depends_on:
    #     - node
    #   networks:
    #     - db_net

    # Node HTTP / WS Server
  node:
    build: . # Build the image using the Dockerfile in the current directory
    container_name: socketserver
    environment:
      # Add this section to define environment variables
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    ports:
      - '8081:8081' # Map port 8081 in the container to port 80 on the host
    volumes:
      - .:/app # Mount the current directory to the /app directory in the container
    networks:
      - db_net

networks:
  db_net:
    name: db_net
