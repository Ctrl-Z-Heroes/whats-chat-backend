name: deployment

on:
  push:
    branches:
      - main

jobs:
  docker:
    if: contains(github.event.head_commit.message, '[Automated]') == false
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set Docker image name
      run: |
        IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME}}/${{ github.event.repository.name}}"
        IMAGE_TAG="${{ github.run_id }}"
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        docker push $IMAGE_NAME:$IMAGE_TAG
      env:
        DOCKER_CLI_ACI: 1

  tag-and-commit:
    needs: docker
    runs-on: ubuntu-latest
    steps:

    - name: Clone repository
      run: |
        git config --global user.name "${{ secrets.GH_USERNAME }}"
        git config --global user.email "${{ secrets.GH_EMAIL }}"
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
    
    - name: List all files in kubernetes sub-folder
      run: |
        IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME}}/${{ github.event.repository.name}}"
        echo $IMAGE_NAME
        IMAGE_TAG="${{ github.run_id }}"

        awk -v image_name="$IMAGE_NAME" -v tag="$IMAGE_TAG" '{
          if ($0 ~ "image: " image_name) {
            sub("image: " image_name ".*", "image: " image_name ":" tag)
          }
          print $0
        }' ./${{ github.event.repository.name }}/kubernetes/deployment.yaml > temp.yaml && mv temp.yaml ./${{ github.event.repository.name }}/kubernetes/deployment.yaml

    - name: Commit the ammended repo
      run: |
        cd ./${{ github.event.repository.name }}
        git commit -am "[Automated] - Retag - ${{ github.run_id }}"
        git push

  argocd:
    needs: tag-and-commit
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Argo CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: Log in to ArgoCD  
      run: |
        y | argocd login ${{ secrets.ARGO_SERVER }} --username ${{ secrets.ARGO_USERNAME }} --password ${{ secrets.ARGO_PASSWORD }} --insecure

    - name: Create Argo app if it doesn't exist
      run: |
        if ! argocd app get ${{ github.event.repository.name }} ; then argocd app create ${{ github.event.repository.name }} --repo https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}.git --path ./kubernetes --dest-server https://kubernetes.default.svc --dest-namespace default 
        fi
          
    - name: Sync app
      run: |
        argocd app sync ${{ github.event.repository.name }}

